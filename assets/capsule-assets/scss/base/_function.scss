@charset 'UTF-8';

/* ========================================================
  Bace Functions
======================================================== */
/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Map Deep Get
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return null;
    }

    $map: map-get($map, $key);
  }

  @return $map;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Map Deep Set
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function map-deep-set($map, $keys...) {
  $map-list: ($map);
  $result: null;

  @if length($keys)==2 {
    @return map-merge($map,
      (nth($keys, 1): nth($keys, -1),
      ));
  }

  @for $i from 1 through length($keys) - 2 {
    $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));
  }

  @for $i from length($map-list) through 1 {
    $result: map-merge(nth($map-list, $i),
        (nth($keys, $i): if($i==length($map-list), nth($keys, -1), $result),
        ));
  }

  @return $result;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Map Has Keys
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function map-has-keys($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return false;
    }
  }

  @return true;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Basic Size Calculator
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
$basic-design-size: 16 !default;

@function basic-size($size, $base: $basic-design-size) {
  @return ($size * $base)+px;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  EM Calculator
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
$basic-font-size: 16 !default;

/* px -> em */
@function em-calc($size, $base: $basic-font-size) {
  @return ($size / $base)+em;
}

/* px -> rem */
@function rem-calc($size, $base: $basic-font-size) {
  @return ($size / $base)+rem;
}

/* em or rem -> px */
@function px-rem-calc($size, $base: $basic-font-size) {
  @return ($size * $base)+px;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Line Height Calculator
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function line-height-calc($size, $base: $basic-font-size) {
  @return ($size / $base);
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Strip Unit
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function strip-unit($number) {
  @if type-of($number)=='number'and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Tint & Shade Color
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
$theme-color-interval: 8% !default;
$white: #fff !default;
$black: #000 !default;

@function tint-color($color, $level) {
  @return mix($white, $color, $level * $theme-color-interval);
}

@function shade-color($color, $level) {
  @return mix($black, $color, $level * $theme-color-interval);
}

@function color-tone($color, $level) {
  @if ($level==0) {
    @return $color;
  }

  @else if ($level>0) {
    @return tint-color($color, $level);
  }

  @else {
    @return shade-color($color, ($level * -1));
  }
}

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  border style set
++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
@function border-style-set($style, $size, $color) {
  @return $style $size $color;
}

/*====================================
    0.3. responsive-map-get
====================================*/
/*
ネストされたmapを取得できる
default, largeのmapをゲットする
*/
@function responsive-map-get($config-name, $size, $key) {
  $default-var: map-deep-get($config-name, (default, $key));
  $this-var: map-deep-get($config-name, ($size, $key));

  @if ($size==default) {
    @if ($this-var==null) {
      @return $default-var;
    }

    @else {
      @return $this-var;
    }
  }

  @else if($size==large) {
    @if ($this-var==null) {
      @return $default-var;
    }

    @else {
      @return $this-var;
    }
  }
}